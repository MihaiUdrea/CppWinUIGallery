#pragma once
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.0.280225.1+7cd366a738
//       
//       Command:
//           LottieGen -GenerateColorBindings -Language Cppwinrt -Namespace CppWinUIGallery -WinUIVersion 3.0 -InputFile TransparentLottie.json
//       
//       Input file:
//           TransparentLottie.json (149474 bytes created 10:11+03:00 Aug 30 2024)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#include "TransparentLottie.g.h"

namespace winrt::CppWinUIGallery
{
    // Name:        Comp 1
    // Frame rate:  100 fps
    // Frame count: 300
    // Duration:    3000.0 mS
    // __________________________________________________________________________________
    // |        Marker         |        Constant         | Frame | mS  |    Progress    |
    // |_______________________|_________________________|_______|_____|________________|
    // | NormalToPressed_Start | M_NormalToPressed_Start |     0 | 0.0 | 0.0F           |
    // | PressedToNormal_End   | M_PressedToNormal_End   |     0 | 0.0 | 0.0F           |
    // | NormalToPressed_End   | M_NormalToPressed_End   |     0 | 5.0 | 0.00183333328F |
    // | PressedToNormal_Start | M_PressedToNormal_Start |     0 | 5.0 | 0.00183333328F |
    // ----------------------------------------------------------------------------------
    // ___________________________________________________________
    // | Theme property |   Accessor   | Type  |  Default value  |
    // |________________|______________|_______|_________________|
    // | #000000        | Color_000000 | Color | #FF000000 Black |
    // | #FFD640        | Color_FFD640 | Color |    #FFFFD640    |
    // | #FFFFFF        | Color_FFFFFF | Color | #FFFFFFFF White |
    // -----------------------------------------------------------
    namespace implementation
    {
        class TransparentLottie
            : public TransparentLottieT<TransparentLottie>
        {
            winrt::Microsoft::UI::Composition::CompositionPropertySet _themeProperties{ nullptr };
            winrt::Windows::UI::Color _themeColor_000000{ 0xFF, 0x00, 0x00, 0x00 };
            winrt::Windows::UI::Color _themeColor_FFD640{ 0xFF, 0xFF, 0xD6, 0x40 };
            winrt::Windows::UI::Color _themeColor_FFFFFF{ 0xFF, 0xFF, 0xFF, 0xFF };
            winrt::Microsoft::UI::Composition::CompositionPropertySet EnsureThemeProperties(winrt::Microsoft::UI::Composition::Compositor compositor);

            static winrt::Windows::Foundation::Numerics::float4 ColorAsVector4(winrt::Windows::UI::Color color);
        public:
            // Animation duration: 3.000 seconds.
            static constexpr int64_t c_durationTicks{ 30000000L };

            // Marker: NormalToPressed_Start.
            static constexpr float M_NormalToPressed_Start{ 0.0F };

            // Marker: PressedToNormal_End.
            static constexpr float M_PressedToNormal_End{ 0.0F };

            // Marker: NormalToPressed_End.
            static constexpr float M_NormalToPressed_End{ 0.00183333328F };

            // Marker: PressedToNormal_Start.
            static constexpr float M_PressedToNormal_Start{ 0.00183333328F };

            // Theme property: Color_000000.
            static inline const winrt::Windows::UI::Color c_themeColor_000000{ 0xFF, 0x00, 0x00, 0x00 };

            // Theme property: Color_FFD640.
            static inline const winrt::Windows::UI::Color c_themeColor_FFD640{ 0xFF, 0xFF, 0xD6, 0x40 };

            // Theme property: Color_FFFFFF.
            static inline const winrt::Windows::UI::Color c_themeColor_FFFFFF{ 0xFF, 0xFF, 0xFF, 0xFF };


            winrt::Windows::UI::Color Color_000000();
            void Color_000000(winrt::Windows::UI::Color value);

            winrt::Windows::UI::Color Color_FFD640();
            void Color_FFD640(winrt::Windows::UI::Color value);

            winrt::Windows::UI::Color Color_FFFFFF();
            void Color_FFFFFF(winrt::Windows::UI::Color value);

            winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual TryCreateAnimatedVisual(
                winrt::Microsoft::UI::Composition::Compositor const& compositor);

            winrt::Microsoft::UI::Xaml::Controls::IAnimatedVisual TryCreateAnimatedVisual(
                winrt::Microsoft::UI::Composition::Compositor const& compositor,
                winrt::Windows::Foundation::IInspectable& diagnostics);

            // Gets the number of frames in the animation.
            double FrameCount();

            // Gets the framerate of the animation.
            double Framerate();

            // Gets the duration of the animation.
            winrt::Windows::Foundation::TimeSpan Duration();

            // Converts a zero-based frame number to the corresponding progress value denoting the
            // start of the frame.
            double FrameToProgress(double frameNumber);

            // Returns a map from marker names to corresponding progress values.
            winrt::Windows::Foundation::Collections::IMapView<hstring, double> Markers();

            // Sets the color property with the given name, or does nothing if no such property
            // exists.
            void SetColorProperty(hstring const& propertyName, winrt::Windows::UI::Color value);

            // Sets the scalar property with the given name, or does nothing if no such property
            // exists.
            void SetScalarProperty(hstring const& propertyName, double value);
        };
    }

    namespace factory_implementation
    {
        struct TransparentLottie : TransparentLottieT<TransparentLottie, implementation::TransparentLottie>
        {
        };
    }
}
