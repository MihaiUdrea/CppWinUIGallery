<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="CppWinUIGallery.LottieIcon"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:CppWinUIGallery"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:controls="using:Microsoft.UI.Xaml.Controls"
    mc:Ignorable="d">
    <Page.Resources>
       
        <ControlTemplate x:Key="LottieButtonTemplate" TargetType="Button">
            <Grid Width="75" Height="50">
                <!-- Use a Border to host the background color -->
                <Border x:Name="BackgroundBorder" Background="LightGray">
                    <ContentPresenter
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"/>
                </Border>

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>

                        <!-- PointerOver state with visual feedback -->
                        <VisualState x:Name="PointerOver">
                            <Storyboard>
                                <ColorAnimation
                                Storyboard.TargetName="BackgroundBorder"
                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                To="LightCoral"
                                Duration="0:0:0.3"/>
                            </Storyboard>
                        </VisualState>

                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimation
                                Storyboard.TargetName="BackgroundBorder"
                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                To="DarkSalmon"
                                Duration="0:0:0.3"/>
                            </Storyboard>
                        </VisualState>

                        <VisualStateGroup.Transitions>
                            <!-- Shortened transition duration for testing -->
                            <VisualTransition From="Normal" To="PointerOver" GeneratedDuration="0:0:0.3"/>
                            <VisualTransition From="PointerOver" To="Pressed" GeneratedDuration="0:0:0.3"/>
                            <VisualTransition From="Pressed" To="Normal" GeneratedDuration="0:0:0.3"/>
                        </VisualStateGroup.Transitions>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
            </Grid>
        </ControlTemplate>
    </Page.Resources>

    <ScrollViewer>
    <Grid>
        
        <StackPanel Orientation="Horizontal"  VerticalAlignment="Top" HorizontalAlignment="Left" >
            <TextBlock Text="Custom Animated Icon" HorizontalAlignment="Left" Style="{StaticResource TitleLargeTextBlockStyle}" Margin="50,40"/>
            <TextBlock HorizontalAlignment="Left" Margin="-465,105" Text="In this example, the custom Animated Icon's implementation is a bit different from the usual one provided by the WinUI 3 Gallery. The concept of Lottie Files will be explained, as well as the process of using this type of file, adjusting its time intervals, and then converting it to actual code." Foreground="LightGray" Style="{StaticResource BaseTextBlockStyle}"/>
        </StackPanel>
        <StackPanel Margin="50,135">
            <TextBlock Text="How it works:" Style="{StaticResource BaseTextBlockStyle}" Foreground="LightGray"/>

                <ToggleButton  Width="75" IsEnabled="True" x:Name="LottieButton" Margin="0,10,0,10"  Click="LottieButton_Click" BorderBrush="Transparent" Foreground="Transparent" Background="Transparent" PointerExited="Button_PointerExited" PointerEntered="Button_PointerEntered">
                   

                    <AnimatedIcon x:Name="SearchAnimatedIcon">
                        <AnimatedIcon.Source>
                            <local:AnimatedLogo/>
                        </AnimatedIcon.Source>
                        <AnimatedIcon.FallbackIconSource>
                            <SymbolIconSource Symbol="GlobalNavigationButton"/>
                        </AnimatedIcon.FallbackIconSource>
                    </AnimatedIcon>
                </ToggleButton>
            
                <!--<Button Click="LottieButton_Click"    x:Name="SwitchAnimation" Content="Switch"/>-->

                <TextBlock Margin="110,-85" Style="{StaticResource TitleTextBlockStyle}" Text="States:"/>
                <TextBlock Margin="120,-76" Style="{StaticResource BaseTextBlockStyle}" Foreground="LightGray" Text="                       • State 1: Hovering in with the cursor"/>
                <TextBlock Margin="120,-39" Style="{StaticResource BaseTextBlockStyle}" Foreground="LightGray" Text="                       • State 2: Keeping the button pressed"/>
                <TextBlock Margin="120,-0" Style="{StaticResource BaseTextBlockStyle}" Foreground="LightGray" Text="                       • State 3: Hovering out with the cursor"/>
        <TextBlock Margin="0,15" Style="{StaticResource TitleTextBlockStyle}"  Text="Lottie Files - What are they?"/>
        <TextBlock Margin="0,-10" Style="{StaticResource BaseTextBlockStyle}" Foreground="LightGray"  Text="WinUI 3 uses a certain file format for the implementation of its Animated Icon feature - Lottie files. Created for vector graphics animation, they are based on JSON files.However, since they use keys of 1-2 characters in length, they are not readable by humans. Intended as a lighter alternative to GIFs and APNG files, they allow for the inclusion of interactive elements."/>
        <TextBlock Margin="0,20" Style="{StaticResource BaseTextBlockStyle}" Text="The content of these files, specifically, the animations can be created in Adobe After Effects, as advised on the Microsoft AnimatedIcon docmentation page. They can be also created on online platforms like LottieFiles or LottieLab." Foreground="LightGray"/>
        <TextBlock Margin="0,30" Style="{StaticResource TitleTextBlockStyle}"  Text="Proccessing the files"/>
        <TextBlock Margin="0,-20" Style="{StaticResource BaseTextBlockStyle}" Foreground="White"  Text="Converting the files into a C++ format calls for the use LottieGen (also referenced as CodeGen). This tool can be installed in a command-line interface, from NuGet:"/>
        <TextBox Text="dotnet tool install -g LottieGen" IsReadOnly="True" Margin="0,10" />
        <TextBlock Margin="0,15" Style="{StaticResource BaseTextBlockStyle}" Foreground="White"  Text="To generate classes in either C++ or C#: "/>
        <TextBox Text="LottieGen -InputFile AnimatedLogo.json -Language cppwinrt -WinUIVersion 3.0 -NameSpace CppWinUIGallery" IsReadOnly="True" Margin="0,-5" />
        <TextBlock Margin="0,20" Style="{StaticResource BaseTextBlockStyle}" Foreground="LightGray"  Text="             • It is recommended to provide the Full Path to the JSON file, not just the Relative Path "/>
                <TextBlock Margin="0,-10" Style="{StaticResource BaseTextBlockStyle}"  HorizontalAlignment="Left"  Foreground="LightGray" Text="             • The folder in which the files are created can be chosen by using -OutputFolder and specifying the path to it"/>
                <TextBlock Text="The following files will be generated:"  HorizontalAlignment="Left"  Margin="0,30" Style="{StaticResource BaseTextBlockStyle}"/>
                <TextBlock Text="• CppWinUIGallery.AnimatedLogo.cpp"  HorizontalAlignment="Left" Margin="250,-48" Width="300" Foreground="LightGray" Style="{StaticResource BaseTextBlockStyle}"/>
                <TextBlock Text="• CppWinUIGallery.AnimatedLogo.h"  HorizontalAlignment="Left"  Margin="250,-15" Foreground="LightGray" Style="{StaticResource BaseTextBlockStyle}"/>
                <TextBlock Text="• CppWinUIGallery.AnimatedLogo.idl"   HorizontalAlignment="Left"  Margin="250,20" Foreground="LightGray" Style="{StaticResource BaseTextBlockStyle}"/>
                <InfoBar
                IsOpen="True"
                IsIconVisible="True"
                IsClosable="False"
                Width="800"
                Margin="700,-110,0,0"
                HorizontalAlignment="Left"
                Message="Before adding these files to the project, remove the &quot;CppWinUIGallery &quot; namespace from the name of each file. (e.g. AnimatedLogo.cpp). Traces of this namespace should be also deleted in the .cpp file itself. (e.g. #include &quot;CppWinUIGallery.AnimatedLogo.h&quot;)" />
                <TextBlock Style="{StaticResource BaseTextBlockStyle}"  HorizontalAlignment="Left"  Text="The XAML for this implementation is minimal:" Foreground="LightGray"></TextBlock>
                <Button x:Name="ShowHideButton" Content="Show XAML"  Click="ShowSourceCode_Click" Margin="0,20,0,10" />
          
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Hidden" Height="300" Margin="0,-40,0,10">
           
                    <TextBox x:Name="SourceCodeTextBox" 
                        IsReadOnly="True" 
                        AcceptsReturn="True"
                        TextWrapping="Wrap"
                        Margin="0,50"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        MinWidth="300"
                        Visibility="Collapsed" />
                </ScrollViewer>
            </StackPanel>
    
    </Grid>
         
    </ScrollViewer>    
    
</Page>
